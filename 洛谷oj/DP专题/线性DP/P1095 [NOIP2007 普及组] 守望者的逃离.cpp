#include<iostream>//ac
using namespace std;

//题解：线性dp
//直接根据时间操作，记录的距离分成闪烁和跑步两种，分开计算
//如果闪烁跑的距离比跑步快，则更新跑步的距离，因为魔法值都是一样的
//（跑步不扣魔法值，相当于直接吧跑步的时候替换成闪烁即可）
//如果在时间内超过距离S，则表示可以成功，输出时间
//否则直接输出跑步的距离dis1即可，因为跑步的距离和闪烁对比更新过

int main() {
    int m,s,t;//m为初始魔法值，s为距离，t为时间
    cin>>m>>s>>t;
    int dis1 = 0,dis2 = 0;//dis1为跑步距离，dis2为闪烁距离
    for(int i = 1;i <= t;i++) {
        //魔法值够直接闪烁，闪烁肯定比移动快
        //否则原地等魔法值
        if(m>=10) dis2 += 60, m -= 10;
        else m += 4;
        //跑步独立计算
        dis1 += 17;
        if(dis2>dis1) dis1 = dis2;//如果闪烁更远则将跑步的距离更新为闪烁距离
        if(dis1>=s) {//到达终点，直接结束
            cout<<"Yes\n"<<i;
            return 0;
        }
    }
    //否则跑步的距离即为最后的距离
    cout<<"No\n"<<dis1;
    return 0;
}

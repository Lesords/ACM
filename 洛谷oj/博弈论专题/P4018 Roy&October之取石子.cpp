#include<iostream>//ac
#include<algorithm>
using namespace std;

//题解：博弈论
//由于1~5都可以被一次取完，1:2^0, 2:2^1, 3:3^1, 4:2^2, 5:5^1
//所以1~5都是必胜态！！！
//那么从6开始判断，由于奇数*奇数还是为奇数，那么对于6来说只有2为底数
//但是6 = 2*3，所以6是不可以被一次取完的。所以6为必败态！！！

//那么对于6*2 = 12来说，如果先手取超过6，那么后手所需要取的会小于6，则后手胜
//如果先手取1-5，那么后手可以取 6-先手取的数，使剩余结果还是为6，则后手胜

//对于6*n来说，不管先手每次取多少，后手都可以凑成 6*m(m<n)，使先手一直处于6*x状态
//则可得出若数量为6的倍数，则先手必败，否则先手胜利

int main() {
    int t;
    cin>>t;
    while(t--) {
        int n;
        cin>>n;
        //不为6的倍数，先手胜
        if(n%6) cout<<"October wins!\n";
        else cout<<"Roy wins!\n";
    }
    return 0;
}
